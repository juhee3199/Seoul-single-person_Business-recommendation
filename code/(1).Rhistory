getwd()
set.seed(100)
shop_norm=read.csv('shop_hum_norm.csv',header = T,encoding='utf-8',row.names ='X')
str(shop_norm)
#기초통계 구하기
colMeans(shop_norm)
sapply(shop_norm,sd)
summary(shop_norm)
#산점도 그래프
plot(shop_norm)
#다중공선성까지 보여주는 산점도
library(MVA)
library(psych)
pairs.panels(shop_norm,main="variable scatterplot matrix")
#상관분석
library(corrplot)
cor(shop_norm)
x<-cor(shop_norm)
corrplot(x)
#주성분분석
m=colMeans(shop_norm)
S=cov(shop_norm)
R=cor(shop_norm)
eigen(S)
eigen(R)
#상관행렬을 위한 주성분 분석 /변수들의 측정단위가 다르고 분산값의 차이가 크게 나기 때문에 공분산행렬보다 상관행렬을 사용한다.
p_cor=princomp(shop_norm,cor=T)
summary(p_cor)     #누적분산이 0.61인 주성분3까지 사용하겠다.
attributes(p_cor)
p_cor$sdev
p_cor$loadings
p_cor$scores
#주성분 screeplot
screeplot(p_cor,npcs = 12,type = "lines",main="principal component scree plot-correlation")
#주성분 2차원그래프
biplot(p_cor)   #각 변수들의 화살표 그러나 두번쨰 주성분까지와의 관계밖에 설명 못함
par(mfrow=c(1,3))
barplot(fact2$loadings[,1],col = rainbow(12),las = 2, main = "factor1")
abline(h = c(-0.4,0.4), col="blue")
#주성분 3차원 그래프
library(rgl)
p3<-princomp(shop_norm,scale=TRUE)
plot3d(p3$scores[,1:3])  # 주성분 점수의 3차원 그래프? 아닌듯 애매
plot3d(p3$loadings[,1:3],main="3D plot",type="s",col=rainbow(12)) # 상관행렬을 이용한 3차원 주성분 그래프 단 화살표 없음
#요인분석
fact1=factanal(shop_norm,factors = 3,rotation = "none")
fact2=factanal(shop_norm,factors = 3,scores ="regression")
fact3=factanal(shop_norm,factors = 3,rotation = "promax")
fact1;fact2;fact3;
par(mfrow=c(1,3))
barplot(fact2$loadings[,1],col = rainbow(12),las = 2, main = "factor1")
abline(h = c(-0.4,0.4), col="blue")
barplot(fact2$loadings[,2],col = rainbow(12),las = 2, main = "factor2")
abline(h = c(-0.4,0.4), col="blue")
barplot(fact2$loadings[,3],col = rainbow(12),las = 2, main = "factor3")
abline(h = c(-0.4,0.4), col="blue")
#3차원 인자분석 그래프
library(rgl)
namevar=names(fact2$loadings)=c("x1","x2","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12")
plot3d(fact2$scores[,1:3],main="verimaxed score 3D polt",type="p",col=4,size=4)  # verimax회전된 3차원 인자점수  그래프
plot3d(fact2$loadings[,1:3],main="verimaxed pattern 3D polt",type="s",col=rainbow(12)) # verimax회전된 3차원 인자패턴
#군집분석
#계층적군집방법 -최단연결법 유클리드거리 이용
library("cluster")
out<-hclust(dist(shop_norm),method="single")
rev(out)
plot(out,hang=-1)
rect.hclust(out,k=4)
#계층적 군집방법- KMEANS
#kmeans 결과 군집간 제곱합/ 총제곱합=77.4%로 적당하다. 여기서 구집간 제곱합이 너무 커지면 군집이 세분화되어 복잡하고 군집을 제대로 대표하지 못한다.  군집을 3개로 정하겠다.
kout<-kmeans(shop_norm,4)
kout
shop_norm1<-shop_norm
shop_norm1$cluster<-kout$cluster
head(shop_norm1)
table(shop_norm1$cluster)  #각 군집 당 소속된 관측값들의 개수 표
# k-평균군집분석그래프
par(mfrow=c(1,1))
shop_norm1$cluster2<-factor(shop_norm1$cluster,levels=c(1,2,3,4),labels=c("가군","나군","다군","라군"))
head(shop_norm1)
library("caret")
featurePlot(x=shop_norm1[,c(1:8)],y=shop_norm1$cluster2,plot="box",scales=list(x=list(rot=90),y=list(relation="free")),layout=c(6,1),auto.key=list(columns=2))
featurePlot(x=shop_norm1[,c(1:8)],y=shop_norm1$cluster2,plot="pairs",auto.key=list(columns=3))
featurePlot(x=shop_norm1[,c(1:8)],y=shop_norm1$cluster2,plot="density",scales=list(x=list(relation="free"),y=list(relation="free")),adjust=1.5,pch="|",layout=c(6,1),auto.key=list(columns=2))
#각 군집의 기술통계량
kcluster1<-subset(shop_norm1,shop_norm1$cluster==1)
kcluster2<-subset(shop_norm1,shop_norm1$cluster==2)
kcluster3<-subset(shop_norm1,shop_norm1$cluster==3)
kcluster4<-subset(shop_norm1,shop_norm1$cluster==4)
#그래프1
require(reshape2)
require(plyr)
require(ggplot2)
require(scales)
